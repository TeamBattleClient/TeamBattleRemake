package ml.balen.Balen.mod.mods;

import me.teambattle.TeamBattle.LateMod;
import ml.balen.Balen.command.Command;
import ml.balen.Balen.event.Event;
import ml.balen.Balen.event.events.EventTick;
import ml.balen.Balen.mod.Mod;
import ml.balen.Balen.util.Logger;
import ml.balen.Balen.value.Value;
import net.minecraft.network.play.client.C03PacketPlayer;

public final class Revive extends Mod {
	private final Value<Float> health = new Value<Float>("revive_health", 6.0F);

	public Revive() {
		super("Revive", 0xFF46607C);
		setEnabled(false);

		LateMod.getCommandManager().getContents()
				.add(new Command("revivehealth", "<health>", "rh") {
					@Override
					public void run(String message) {
						if (message.split(" ")[1].equalsIgnoreCase("-d")) {
							health.setValue(health.getDefaultValue());
						} else {
							health.setValue(Float.parseFloat(message.split(" ")[1]));
						}

						if (health.getValue() < 1.0F) {
							health.setValue(1.0F);
						}
						Logger.logChat("Revive Health set to: "
								+ health.getValue());
					}
				});
	}

	@Override
	public void onEvent(Event event) {
		if (event instanceof EventTick) {
			if (mc.thePlayer != null) {
				if (health.getValue() >= mc.thePlayer.getHealth()) {

					mc.getNetHandler().addToSendQueue(
							new C03PacketPlayer.C04PacketPlayerPosition(
									mc.thePlayer.posX,
									mc.thePlayer.boundingBox.minY + 1.0D,
									mc.thePlayer.posY + 1.0D,
									mc.thePlayer.posZ, mc.thePlayer.onGround));
					mc.getNetHandler().addToSendQueue(
							new C03PacketPlayer.C04PacketPlayerPosition(
									mc.thePlayer.posX,
									mc.thePlayer.boundingBox.minY - 2.0D - 999,
									mc.thePlayer.posY - 2.0D - 999,
									mc.thePlayer.posZ, mc.thePlayer.onGround));
				}
			}
		}
	}
}
