package net.minecraft.world.gen.layer;

public class GenLayerVoronoiZoom extends GenLayer {

	public GenLayerVoronoiZoom(long p_i2133_1_, GenLayer p_i2133_3_) {
		super(p_i2133_1_);
		super.parent = p_i2133_3_;
	}

	/**
	 * Returns a list of integer values generated by this layer. These may be
	 * interpreted as temperatures, rainfall amounts, or biomeList[] indices
	 * based on the particular GenLayer subclass.
	 */
	@Override
	public int[] getInts(int p_75904_1_, int p_75904_2_, int p_75904_3_,
			int p_75904_4_) {
		p_75904_1_ -= 2;
		p_75904_2_ -= 2;
		final int var5 = p_75904_1_ >> 2;
		final int var6 = p_75904_2_ >> 2;
		final int var7 = (p_75904_3_ >> 2) + 2;
		final int var8 = (p_75904_4_ >> 2) + 2;
		final int[] var9 = parent.getInts(var5, var6, var7, var8);
		final int var10 = var7 - 1 << 2;
		final int var11 = var8 - 1 << 2;
		final int[] var12 = IntCache.getIntCache(var10 * var11);
		int var14;

		for (int var13 = 0; var13 < var8 - 1; ++var13) {
			var14 = 0;
			int var15 = var9[var14 + 0 + (var13 + 0) * var7];

			for (int var16 = var9[var14 + 0 + (var13 + 1) * var7]; var14 < var7 - 1; ++var14) {
				initChunkSeed(var14 + var5 << 2, var13 + var6 << 2);
				final double var19 = (nextInt(1024) / 1024.0D - 0.5D) * 3.6D;
				final double var21 = (nextInt(1024) / 1024.0D - 0.5D) * 3.6D;
				initChunkSeed(var14 + var5 + 1 << 2, var13 + var6 << 2);
				final double var23 = (nextInt(1024) / 1024.0D - 0.5D) * 3.6D + 4.0D;
				final double var25 = (nextInt(1024) / 1024.0D - 0.5D) * 3.6D;
				initChunkSeed(var14 + var5 << 2, var13 + var6 + 1 << 2);
				final double var27 = (nextInt(1024) / 1024.0D - 0.5D) * 3.6D;
				final double var29 = (nextInt(1024) / 1024.0D - 0.5D) * 3.6D + 4.0D;
				initChunkSeed(var14 + var5 + 1 << 2, var13 + var6 + 1 << 2);
				final double var31 = (nextInt(1024) / 1024.0D - 0.5D) * 3.6D + 4.0D;
				final double var33 = (nextInt(1024) / 1024.0D - 0.5D) * 3.6D + 4.0D;
				final int var35 = var9[var14 + 1 + (var13 + 0) * var7] & 255;
				final int var36 = var9[var14 + 1 + (var13 + 1) * var7] & 255;

				for (int var37 = 0; var37 < 4; ++var37) {
					int var38 = ((var13 << 2) + var37) * var10 + (var14 << 2);

					for (int var39 = 0; var39 < 4; ++var39) {
						final double var40 = (var37 - var21) * (var37 - var21)
								+ (var39 - var19) * (var39 - var19);
						final double var42 = (var37 - var25) * (var37 - var25)
								+ (var39 - var23) * (var39 - var23);
						final double var44 = (var37 - var29) * (var37 - var29)
								+ (var39 - var27) * (var39 - var27);
						final double var46 = (var37 - var33) * (var37 - var33)
								+ (var39 - var31) * (var39 - var31);

						if (var40 < var42 && var40 < var44 && var40 < var46) {
							var12[var38++] = var15;
						} else if (var42 < var40 && var42 < var44
								&& var42 < var46) {
							var12[var38++] = var35;
						} else if (var44 < var40 && var44 < var42
								&& var44 < var46) {
							var12[var38++] = var16;
						} else {
							var12[var38++] = var36;
						}
					}
				}

				var15 = var35;
				var16 = var36;
			}
		}

		final int[] var48 = IntCache.getIntCache(p_75904_3_ * p_75904_4_);

		for (var14 = 0; var14 < p_75904_4_; ++var14) {
			System.arraycopy(var12, (var14 + (p_75904_2_ & 3)) * var10
					+ (p_75904_1_ & 3), var48, var14 * p_75904_3_, p_75904_3_);
		}

		return var48;
	}
}
