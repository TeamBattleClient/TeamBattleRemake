package net.minecraft.world.gen.layer;

public class GenLayerEdge extends GenLayer {
	public static enum Mode {
		COOL_WARM("COOL_WARM", 0), HEAT_ICE("HEAT_ICE", 1), SPECIAL("SPECIAL",
				2);

		private Mode(String p_i45473_1_, int p_i45473_2_) {
		}
	}

	static final class SwitchMode {
		static final int[] field_151642_a = new int[GenLayerEdge.Mode.values().length];

		static {
			try {
				field_151642_a[GenLayerEdge.Mode.COOL_WARM.ordinal()] = 1;
			} catch (final NoSuchFieldError var3) {
				;
			}

			try {
				field_151642_a[GenLayerEdge.Mode.HEAT_ICE.ordinal()] = 2;
			} catch (final NoSuchFieldError var2) {
				;
			}

			try {
				field_151642_a[GenLayerEdge.Mode.SPECIAL.ordinal()] = 3;
			} catch (final NoSuchFieldError var1) {
				;
			}
		}
	}

	private final GenLayerEdge.Mode field_151627_c;

	public GenLayerEdge(long p_i45474_1_, GenLayer p_i45474_3_,
			GenLayerEdge.Mode p_i45474_4_) {
		super(p_i45474_1_);
		parent = p_i45474_3_;
		field_151627_c = p_i45474_4_;
	}

	private int[] func_151624_d(int p_151624_1_, int p_151624_2_,
			int p_151624_3_, int p_151624_4_) {
		final int var5 = p_151624_1_ - 1;
		final int var6 = p_151624_2_ - 1;
		final int var7 = 1 + p_151624_3_ + 1;
		final int var8 = 1 + p_151624_4_ + 1;
		final int[] var9 = parent.getInts(var5, var6, var7, var8);
		final int[] var10 = IntCache.getIntCache(p_151624_3_ * p_151624_4_);

		for (int var11 = 0; var11 < p_151624_4_; ++var11) {
			for (int var12 = 0; var12 < p_151624_3_; ++var12) {
				int var13 = var9[var12 + 1 + (var11 + 1) * var7];

				if (var13 == 4) {
					final int var14 = var9[var12 + 1 + (var11 + 1 - 1) * var7];
					final int var15 = var9[var12 + 1 + 1 + (var11 + 1) * var7];
					final int var16 = var9[var12 + 1 - 1 + (var11 + 1) * var7];
					final int var17 = var9[var12 + 1 + (var11 + 1 + 1) * var7];
					final boolean var18 = var14 == 2 || var15 == 2
							|| var16 == 2 || var17 == 2;
					final boolean var19 = var14 == 1 || var15 == 1
							|| var16 == 1 || var17 == 1;

					if (var19 || var18) {
						var13 = 3;
					}
				}

				var10[var12 + var11 * p_151624_3_] = var13;
			}
		}

		return var10;
	}

	private int[] func_151625_e(int p_151625_1_, int p_151625_2_,
			int p_151625_3_, int p_151625_4_) {
		final int[] var5 = parent.getInts(p_151625_1_, p_151625_2_,
				p_151625_3_, p_151625_4_);
		final int[] var6 = IntCache.getIntCache(p_151625_3_ * p_151625_4_);

		for (int var7 = 0; var7 < p_151625_4_; ++var7) {
			for (int var8 = 0; var8 < p_151625_3_; ++var8) {
				initChunkSeed(var8 + p_151625_1_, var7 + p_151625_2_);
				int var9 = var5[var8 + var7 * p_151625_3_];

				if (var9 != 0 && nextInt(13) == 0) {
					var9 |= 1 + nextInt(15) << 8 & 3840;
				}

				var6[var8 + var7 * p_151625_3_] = var9;
			}
		}

		return var6;
	}

	private int[] func_151626_c(int p_151626_1_, int p_151626_2_,
			int p_151626_3_, int p_151626_4_) {
		final int var5 = p_151626_1_ - 1;
		final int var6 = p_151626_2_ - 1;
		final int var7 = 1 + p_151626_3_ + 1;
		final int var8 = 1 + p_151626_4_ + 1;
		final int[] var9 = parent.getInts(var5, var6, var7, var8);
		final int[] var10 = IntCache.getIntCache(p_151626_3_ * p_151626_4_);

		for (int var11 = 0; var11 < p_151626_4_; ++var11) {
			for (int var12 = 0; var12 < p_151626_3_; ++var12) {
				initChunkSeed(var12 + p_151626_1_, var11 + p_151626_2_);
				int var13 = var9[var12 + 1 + (var11 + 1) * var7];

				if (var13 == 1) {
					final int var14 = var9[var12 + 1 + (var11 + 1 - 1) * var7];
					final int var15 = var9[var12 + 1 + 1 + (var11 + 1) * var7];
					final int var16 = var9[var12 + 1 - 1 + (var11 + 1) * var7];
					final int var17 = var9[var12 + 1 + (var11 + 1 + 1) * var7];
					final boolean var18 = var14 == 3 || var15 == 3
							|| var16 == 3 || var17 == 3;
					final boolean var19 = var14 == 4 || var15 == 4
							|| var16 == 4 || var17 == 4;

					if (var18 || var19) {
						var13 = 2;
					}
				}

				var10[var12 + var11 * p_151626_3_] = var13;
			}
		}

		return var10;
	}

	/**
	 * Returns a list of integer values generated by this layer. These may be
	 * interpreted as temperatures, rainfall amounts, or biomeList[] indices
	 * based on the particular GenLayer subclass.
	 */
	@Override
	public int[] getInts(int p_75904_1_, int p_75904_2_, int p_75904_3_,
			int p_75904_4_) {
		switch (GenLayerEdge.SwitchMode.field_151642_a[field_151627_c.ordinal()]) {
		case 1:
		default:
			return func_151626_c(p_75904_1_, p_75904_2_, p_75904_3_, p_75904_4_);

		case 2:
			return func_151624_d(p_75904_1_, p_75904_2_, p_75904_3_, p_75904_4_);

		case 3:
			return func_151625_e(p_75904_1_, p_75904_2_, p_75904_3_, p_75904_4_);
		}
	}
}
